# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddPokemonToUser {
  pokemonName: String!
  urlPokemon: String!
  userName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input InputUserType {
  name: String!
  password: String!
  userName: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type LoggedInDto {
  token: String!
  user: User!
}

type Mutation {
  addPokemonToUser(pokemonDTO: AddPokemonToUser!): User!
  createUser(newUser: InputUserType!): User!
  updateUser(updates: UpdateUser!, userName: String!): User!
}

type Pokemon {
  createAt: DateTime!
  id: Int!
  name: String!
  status: StatusEntity!
  updateAt: DateTime!
  url: String!
  users: [User!]!
}

type PokemonJSON {
  data: JSON!
}

type PokemonType {
  name: String!
  url: String!
}

type Query {
  getAllPokemon: [PokemonType!]!
  getAllUser: [User!]!
  getPokemonDetail(name: String!): PokemonJSON!
  getUser(userName: String!): User!
  sayHello: String!
  signin(signIn: SigninDto!): LoggedInDto!
}

input SigninDto {
  password: String!
  userName: String!
}

"""Posibles estados de las entidades"""
enum StatusEntity {
  ACTIVE
  INACTIVE
}

input UpdateUser {
  isActive: Boolean!
  password: String!
}

type User {
  createAt: DateTime!
  id: Int!
  isActive: Boolean!
  name: String!
  pokemons: [Pokemon!]!
  status: StatusEntity!
  updateAt: DateTime!
  userName: String
}
